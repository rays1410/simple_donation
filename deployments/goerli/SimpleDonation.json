{
  "address": "0xdeD31AF754C28c01CcCa54C5B0fe8d3faC194c39",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "SimpleDonation__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Donation__Alert",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Donation__FundsWithdrawed",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPricefeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4991aa27bc31f49ccde956f808dafd55b90d2bcc7ae1626abbdd9e7be05bc309",
  "receipt": {
    "to": null,
    "from": "0xe80A96afEE501Db83bF3Cd7a87FAaD21649cef6E",
    "contractAddress": "0xdeD31AF754C28c01CcCa54C5B0fe8d3faC194c39",
    "transactionIndex": 75,
    "gasUsed": "529342",
    "logsBloom": "0x
    "blockHash": "0x314fbe1b1f64ed060940d4387b83ebb6bf9ecf57f2970a0cfba3c4f33b84ab30",
    "transactionHash": "0x4991aa27bc31f49ccde956f808dafd55b90d2bcc7ae1626abbdd9e7be05bc309",
    "logs": [],
    "blockNumber": 7775682,
    "cumulativeGasUsed": "8195278",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd4a33860578de61dbabdc8bfdb98fd742fa7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "f7b837e1bceb861bdd8b251581806cd6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SimpleDonation__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Donation__Alert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Donation__FundsWithdrawed\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricefeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"rays1410\",\"details\":\"One needs to expand it to the contract factory.      It means that any user can deploy its own donation contract      based on this one.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Simple donation contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract allows to create donation contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleDonation.sol\":\"SimpleDonation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/CurrencyConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n/**@title ETH/USD converter library for unit256\\r\\n * @author rays1410\\r\\n * @notice Using this library we can convert ETH to USD\\r\\n */\\r\\n\\r\\nlibrary CurrencyConverter {\\r\\n    function convert_ETH_USD(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface _priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        (, int256 answer, , , ) = _priceFeed.latestRoundData();\\r\\n        uint256 ethPrice = (uint256(answer) * 10e10);\\r\\n        return (ethPrice * ethAmount) / 10e18;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1b75253c088fbc9d76d0bf4af0e6727ebfd797d60cb9e00aee180ccf4c3664d7\",\"license\":\"MIT\"},\"contracts/SimpleDonation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./CurrencyConverter.sol\\\";\\r\\n\\r\\n/* Errors */\\r\\nerror SimpleDonation__NotOwner();\\r\\n\\r\\n/**@title Simple donation contract\\r\\n * @author rays1410\\r\\n * @notice This contract allows to create donation contract\\r\\n * @dev One needs to expand it to the contract factory.\\r\\n *      It means that any user can deploy its own donation contract\\r\\n *      based on this one.\\r\\n */\\r\\ncontract SimpleDonation {\\r\\n    /* Libraries */\\r\\n    using CurrencyConverter for uint256;\\r\\n\\r\\n    // Donators array\\r\\n    address[] private s_donators;\\r\\n\\r\\n    // The owner is set once (also immutable consumes less gas)\\r\\n    address private immutable i_owner;\\r\\n\\r\\n    // Current contribution of users\\r\\n    mapping(address => uint256) private s_addressToAmount;\\r\\n\\r\\n    // Goerli, Chainlink: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n    // For the current USD/ETH price\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    /* Events */\\r\\n    event Donation__Alert(address indexed _donator, uint256 _amount); // Emit this when the new donation received\\r\\n    event Donation__FundsWithdrawed(uint256 _amount); // Emit when all balance is withdrawed by owner\\r\\n\\r\\n    // OnlyOwner modifier, can be replaced for the OpenZeppelin one\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) {\\r\\n            revert SimpleDonation__NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _priceFeed) {\\r\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    // Users use this function for donation\\r\\n    function donate() public payable {\\r\\n        s_donators.push(msg.sender);\\r\\n        s_addressToAmount[msg.sender] += msg.value;\\r\\n        emit Donation__Alert(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    // The owner withdraws balance when he wants\\r\\n    function withdraw() public payable onlyOwner {\\r\\n        (bool sent, ) = msg.sender.call{value: address(this).balance}(\\\"\\\");\\r\\n        if (sent == true) {\\r\\n            emit Donation__FundsWithdrawed(address(this).balance);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Check how much particular user has donated (in ETH)\\r\\n    function getUserContribution() public view returns (uint256) {\\r\\n        // uint256 userEthBalance = s_addressToAmount[msg.sender];\\r\\n        // return userEthBalance.convert_ETH_USD(s_priceFeed);\\r\\n        return s_addressToAmount[msg.sender];\\r\\n    }\\r\\n\\r\\n    // Check current contract balance (in USD)\\r\\n    function getContractBalance() public view returns (uint256) {\\r\\n        uint256 ethBalance = address(this).balance;\\r\\n        return ethBalance.convert_ETH_USD(s_priceFeed);\\r\\n    }\\r\\n\\r\\n    function getPricefeedAddress() public view returns (address) {\\r\\n        return address(s_priceFeed);\\r\\n    }\\r\\n\\r\\n    // Just call donate() if msg.data is empty\\r\\n    receive() external payable {\\r\\n        donate();\\r\\n    }\\r\\n\\r\\n    // Just call donate() if msg.data is not empty\\r\\n    fallback() external payable {\\r\\n        donate();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc8b4e3f397f967c5b68f4b25c45337717279f5f72807a73f59b2e5d169e7e307\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161098238038061098283398181016040528101906100329190610113565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c61082461015e600039600061020701526108246000f3fe60806040526004361061004e5760003560e01c80633ccfd60b146100675780635b19349e146100715780636f9fb98a1461009c5780638930bf9a146100c7578063ed88c68e146100f25761005d565b3661005d5761005b6100fc565b005b6100656100fc565b005b61006f610205565b005b34801561007d57600080fd5b5061008661033e565b60405161009391906104ce565b60405180910390f35b3480156100a857600080fd5b506100b1610385565b6040516100be91906104ce565b60405180910390f35b3480156100d357600080fd5b506100dc6103c6565b6040516100e9919061052a565b60405180910390f35b6100fa6100fc565b005b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101ae9190610574565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2a17cc1e39e7eab0dc3182373325db128bed3778474de00f0d974afe059b3f5e346040516101fb91906104ce565b60405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028a576040517f22e2d6c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102b0906105fb565b60006040518083038185875af1925050503d80600081146102ed576040519150601f19603f3d011682016040523d82523d6000602084013e6102f2565b606091505b5050905060011515811515141561033b577f2ec5b7e99136091fc5235fa9a8100671166176f54b175cd37261fa7a3cf35da34760405161033291906104ce565b60405180910390a15b50565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000804790506103c0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826103f090919063ffffffff16565b91505090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561043957600080fd5b505afa15801561044d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047191906106b9565b505050915050600064174876e8008261048a9190610734565b9050678ac7230489e8000085826104a19190610734565b6104ab91906107bd565b9250505092915050565b6000819050919050565b6104c8816104b5565b82525050565b60006020820190506104e360008301846104bf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610514826104e9565b9050919050565b61052481610509565b82525050565b600060208201905061053f600083018461051b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061057f826104b5565b915061058a836104b5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105bf576105be610545565b5b828201905092915050565b600081905092915050565b50565b60006105e56000836105ca565b91506105f0826105d5565b600082019050919050565b6000610606826105d8565b9150819050919050565b600080fd5b600069ffffffffffffffffffff82169050919050565b61063481610615565b811461063f57600080fd5b50565b6000815190506106518161062b565b92915050565b6000819050919050565b61066a81610657565b811461067557600080fd5b50565b60008151905061068781610661565b92915050565b610696816104b5565b81146106a157600080fd5b50565b6000815190506106b38161068d565b92915050565b600080600080600060a086880312156106d5576106d4610610565b5b60006106e388828901610642565b95505060206106f488828901610678565b9450506040610705888289016106a4565b9350506060610716888289016106a4565b925050608061072788828901610642565b9150509295509295909350565b600061073f826104b5565b915061074a836104b5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561078357610782610545565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006107c8826104b5565b91506107d3836104b5565b9250826107e3576107e261078e565b5b82820490509291505056fea2646970667358221220805e1c6c7323778b914076d41f1ec57b8f0debb04d5ff920067c7ea59dfd609a64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80633ccfd60b146100675780635b19349e146100715780636f9fb98a1461009c5780638930bf9a146100c7578063ed88c68e146100f25761005d565b3661005d5761005b6100fc565b005b6100656100fc565b005b61006f610205565b005b34801561007d57600080fd5b5061008661033e565b60405161009391906104ce565b60405180910390f35b3480156100a857600080fd5b506100b1610385565b6040516100be91906104ce565b60405180910390f35b3480156100d357600080fd5b506100dc6103c6565b6040516100e9919061052a565b60405180910390f35b6100fa6100fc565b005b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101ae9190610574565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2a17cc1e39e7eab0dc3182373325db128bed3778474de00f0d974afe059b3f5e346040516101fb91906104ce565b60405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028a576040517f22e2d6c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102b0906105fb565b60006040518083038185875af1925050503d80600081146102ed576040519150601f19603f3d011682016040523d82523d6000602084013e6102f2565b606091505b5050905060011515811515141561033b577f2ec5b7e99136091fc5235fa9a8100671166176f54b175cd37261fa7a3cf35da34760405161033291906104ce565b60405180910390a15b50565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000804790506103c0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826103f090919063ffffffff16565b91505090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561043957600080fd5b505afa15801561044d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047191906106b9565b505050915050600064174876e8008261048a9190610734565b9050678ac7230489e8000085826104a19190610734565b6104ab91906107bd565b9250505092915050565b6000819050919050565b6104c8816104b5565b82525050565b60006020820190506104e360008301846104bf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610514826104e9565b9050919050565b61052481610509565b82525050565b600060208201905061053f600083018461051b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061057f826104b5565b915061058a836104b5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105bf576105be610545565b5b828201905092915050565b600081905092915050565b50565b60006105e56000836105ca565b91506105f0826105d5565b600082019050919050565b6000610606826105d8565b9150819050919050565b600080fd5b600069ffffffffffffffffffff82169050919050565b61063481610615565b811461063f57600080fd5b50565b6000815190506106518161062b565b92915050565b6000819050919050565b61066a81610657565b811461067557600080fd5b50565b60008151905061068781610661565b92915050565b610696816104b5565b81146106a157600080fd5b50565b6000815190506106b38161068d565b92915050565b600080600080600060a086880312156106d5576106d4610610565b5b60006106e388828901610642565b95505060206106f488828901610678565b9450506040610705888289016106a4565b9350506060610716888289016106a4565b925050608061072788828901610642565b9150509295509295909350565b600061073f826104b5565b915061074a836104b5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561078357610782610545565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006107c8826104b5565b91506107d3836104b5565b9250826107e3576107e261078e565b5b82820490509291505056fea2646970667358221220805e1c6c7323778b914076d41f1ec57b8f0debb04d5ff920067c7ea59dfd609a64736f6c63430008080033",
  "devdoc": {
    "author": "rays1410",
    "details": "One needs to expand it to the contract factory.      It means that any user can deploy its own donation contract      based on this one.",
    "kind": "dev",
    "methods": {},
    "title": "Simple donation contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract allows to create donation contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 97,
        "contract": "contracts/SimpleDonation.sol:SimpleDonation",
        "label": "s_donators",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 103,
        "contract": "contracts/SimpleDonation.sol:SimpleDonation",
        "label": "s_addressToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 106,
        "contract": "contracts/SimpleDonation.sol:SimpleDonation",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}